// RUN: zirgen %s --emit=picus | FileCheck %s

// CHECK: (prime-number 2013265921)
// CHECK-NEXT: (begin-module Top)
// CHECK-NEXT: (output result__layout_first__super__super)
// CHECK-NEXT: (output result__layout_x__super__super__super)
// CHECK-NEXT: (output result__layout_x_arm0__super__super__super)
// CHECK-NEXT: (output result__layout_x_arm1__super__super__super)
// CHECK-NEXT: (output result_first__super__super)
// CHECK-NEXT: (output result_x__super__super)
// CHECK-NEXT: (assert (= x0 8))
// CHECK-NEXT: (assert (= x1 7))
// CHECK-NEXT: (assert (= x2 1))
// CHECK-NEXT: (assert (= x3 0))
// CHECK-NEXT: (assert (= x4 (- x3 result__layout_first__super__super)))
// CHECK-NEXT: (assert (= x4 0))
// CHECK-NEXT: (assert (= x5 (- x2 result__layout_first__super__super)))
// CHECK-NEXT: ; begin mux
// CHECK-NEXT: (assert (= (* x5 result__layout_x__super__super__super) (* x5 result__layout_x_arm0__super__super__super)))
// CHECK-NEXT: (assert (= x6 (- x1 result__layout_x_arm0__super__super__super)))
// CHECK-NEXT: (assert (= x6 0))
// CHECK-NEXT: ; mark mux arm
// CHECK-NEXT: (assert (= (* result__layout_first__super__super result__layout_x__super__super__super) (* result__layout_first__super__super result__layout_x_arm1__super__super__super)))
// CHECK-NEXT: (assert (= x7 (- x0 result__layout_x_arm1__super__super__super)))
// CHECK-NEXT: (assert (= x7 0))
// CHECK-NEXT: ; mark mux arm
// CHECK-NEXT: (assert (= mux_x8__layout__super__super (+ (* x5 result__layout_x_arm0__super__super__super) (* result__layout_first__super__super result__layout_x_arm1__super__super__super))))
// CHECK-NEXT: (assert (= mux_x8__super__super (+ (* x5 result__layout_x_arm0__super__super__super) (* result__layout_first__super__super result__layout_x_arm1__super__super__super))))
// CHECK-NEXT: ; end mux
// CHECK-NEXT: (call [] Log [ ])
// CHECK-NEXT: (assert (= result_first__super__super result__layout_first__super__super))
// CHECK-NEXT: (assert (= result_x__super__super result__layout_x__super__super__super))
// CHECK-NEXT: (end-module)

#[picus_analyze]
component Top() {
  public first := Reg(0);
  public x := [1 - first, first] -> (Reg(7), Reg(8));
  Log("x = %u", x);
}
