load("@llvm-project//mlir:tblgen.bzl", "gentbl_cc_library", "td_library")

package(
    default_visibility = ["//visibility:public"],
)

td_library(
    name = "PassesTdFiles",
    srcs = ["Passes.td"],
    deps = [
        "@llvm-project//mlir:OpBaseTdFiles",
        "@llvm-project//mlir:RewritePassBaseTdFiles",
    ],
)

gentbl_cc_library(
    name = "PassesIncGen",
    tbl_outs = [
        (
            ["-gen-pass-decls"],
            "Passes.h.inc",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = ":Passes.td",
    deps = [
        ":PassesTdFiles",
        "@llvm-project//mlir:PassBaseTdFiles",
    ],
)

cc_library(
    name = "codegen",
    srcs = [
        "CppLanguageSyntax.cpp",
        "RustLanguageSyntax.cpp",
        "codegen.cpp",
        "gen_cpp.cpp",
        "gen_gpu.cpp",
        "gen_recursion.cpp",
        "gen_rust.cpp",
        "mustache.h",
    ],
    hdrs = [
        "Passes.h",
        "codegen.h",
        ":templates",
    ],
    deps = [
        ":PassesIncGen",
        ":protocol_info_const",
        "//zirgen/Dialect/ZHLT/IR:Codegen",
        "//zirgen/Dialect/Zll/Analysis",
        "//zirgen/Dialect/Zll/Transforms:passes",
        "//zirgen/circuit/recursion:lib",
        "//zirgen/compiler/stats",
    ],
)

cc_library(
    name = "protocol_info_const",
    srcs = ["protocol_info_const.h"],
)

filegroup(
    name = "templates",
    srcs = [
        "cpp/poly.tmpl.cpp.h",
        "cpp/step.tmpl.cpp.h",
        "gpu/eval_check.tmpl.cu.h",
        "gpu/eval_check.tmpl.metal.h",
        "gpu/step.tmpl.cu.h",
        "gpu/step.tmpl.metal.h",
        "rust/info.tmpl.rs.h",
        "rust/poly_ext_def.tmpl.rs.h",
        "rust/taps.tmpl.rs.h",
    ],
)
