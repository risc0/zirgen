// This file contains helpers for U8 and U16 lookups
// RUN: zirgen --test %s

extern LookupDelta(table: Val, index: Val, count: Val);
extern LookupCurrent(table: Val, index: Val): Val;

#[picus_inline]
argument ArgU8(count: Val, val: Val) {
  public count := NondetReg(count);
  public val := NondetReg(val);
  LookupDelta(8, val, count);
  AssertRange!(0, val, 0x100);
}

// Set a register nodeterministically, and then verify it is a U8
#[picus_inline]
component NondetU8Reg(val: Val) {
  arg := ArgU8(1, val);
  arg.count = 1;
  arg.val
}

// Set a register and verify it is a U8
#[picus_inline]
component U8Reg(val: Val) {
  ret := NondetU8Reg(val);
  ret = val;
  ret
}

#[picus_inline]
argument ArgU16(count: Val, val: Val) {
  public count := NondetReg(count);
  public val := NondetReg(val);
  LookupDelta(16, val, count);
  AssertRange!(0, val, 0x10000);
}

// Set a register nodeterministically, and then verify it is a U16
#[picus_inline]
component NondetU16Reg(val: Val) {
  public arg := ArgU16(1, val);
  arg.count = 1;
  arg.val
}

// Set a register and verify it is a U16
#[picus_inline]
component U16Reg(val: Val) {
  ret := NondetU16Reg(val);
  ret = val;
  ret
}

// TODO: Tests

